apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  dataVolumeTemplates:
  - metadata:
      creationTimestamp: null
      name: {{ .Release.Name }}-rootdisk
    spec:
      pvc:
        accessModes: {{ toYaml .Values.machineRootDiskAccessModes | nindent 8 }}
        resources:
          requests:
            storage: '{{ .Values.machineRootDiskCapacity }}'
{{- if gt (len .Values.machineRootDiskStorageClassName) 0 }}
        storageClassName: {{ .Values.machineRootDiskStorageClassName }}
{{- end }}
        volumeMode: {{ .Values.machineRootDiskVolumeMode }}
      source:
        http:
          url: {{ .Values.machineImageUrl }}
          certConfigMap: {{ .Release.Name }}-trusted-ca-bundle
  runStrategy: Always
  template:
    metadata:
      labels:
        kubevirt.io/domain: {{ .Release.Name }}
        kubevirt.io/size: small
        vm.kubevirt.io/name: {{ .Release.Name }}
        os.template.kubevirt.io/fedora37: 'true'
        flavor.template.kubevirt.io/small: 'true'
        workload.template.kubevirt.io/server: 'true'
    spec:
      {{- with .Values.machineNodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/baremetal
      domain:
        cpu:
          cores: 1
          sockets: 1
          threads: 1
        devices:
          disks:
          - disk:
              bus: virtio
            name: cloudinitdisk
          - bootOrder: 1
            disk:
              bus: virtio
            name: rootdisk
          interfaces:
          - masquerade: {}
            model: virtio
            name: default
          networkInterfaceMultiqueue: true
          rng: {}
        machine:
          type: pc-q35-rhel8.3.0
        resources:
          requests:
            memory: 2Gi
      evictionStrategy: {{ .Values.machineEvictionStrategy }}
      hostname: {{ .Release.Name }}
      networks:
      - name: default
        pod: {}
      terminationGracePeriodSeconds: 180
      volumes:
      - cloudInitNoCloud:
          userData: |
            #cloud-config
            user: '{{ .Values.machineUserName }}'
            password: '{{ .Values.machineUserPassword }}'
            chpasswd:
              expire: false
            ssh_pwauth: true
            ssh_authorized_keys:
            - '{{ .Values.machineSshAuthorizedKey }}'
        name: cloudinitdisk
      - dataVolume:
          name: {{ .Release.Name }}-rootdisk
        name: rootdisk
